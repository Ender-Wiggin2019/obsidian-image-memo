import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'
import path from "path";
import fs from "fs";
import {
	exec
} from 'child_process';

const banner =
	`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const wasmPlugin = (config) => {
	return {
		name: "wasm",
		setup(build) {
			build.onResolve({
				filter: /\.wasm$/
			}, (args) => {
				if (args.resolveDir === "") {
					return;
				}
				return {
					path: path.isAbsolute(args.path) ?
						args.path : path.join(args.resolveDir, args.path),
					namespace: `wasm-${config.mode}`,
				};
			});
			build.onLoad({
					filter: /.*/,
					namespace: "wasm-deferred"
				},
				async (args) => ({
					contents: await fs.promises.readFile(args.path),
					loader: "file",
				})
			);
			build.onLoad({
					filter: /.*/,
					namespace: "wasm-embed"
				},
				async (args) => ({
					contents: await fs.promises.readFile(args.path),
					loader: "binary",
				})
			);
		},
	};
};

const prod = (process.argv[2] === 'production');

esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	plugins: [wasmPlugin({
		mode: "embed"
	})],
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/closebrackets',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/comment',
		'@codemirror/fold',
		'@codemirror/gutter',
		'@codemirror/highlight',
		'@codemirror/history',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/matchbrackets',
		'@codemirror/panel',
		'@codemirror/rangeset',
		'@codemirror/rectangular-selection',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/stream-parser',
		'@codemirror/text',
		'@codemirror/tooltip',
		'@codemirror/view',
		...builtins
	],
	format: 'cjs',
	watch: {
		onRebuild(error, result) {
			if (error) console.error('watch build failed:', error)
			else {
				// after the main.js is built, run the postcss command
				console.log('build:css')
				exec('postcss ./src/css/styles.css -o styles.css')
			}
		}
	},
	target: 'es2016',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'main.js',
}).catch(() => process.exit(1));
